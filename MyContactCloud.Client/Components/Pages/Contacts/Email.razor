@page "/contacts/email/{contactId:int}"

@using Microsoft.AspNetCore.Authorization
@using MyContactCloud.Client.Components.UI
@using MyContactCloud.Client.Services.Interfaces
@inject IContactDTOService ContactService
@inject ICategoryDTOService CategoryService
@inject NavigationManager Nav

@rendermode InteractiveServer
@attribute [Authorize]

<PageTitle>MyContactCloud | Email Contact</PageTitle>

<div class="card shadow-lg my-3">
    <div class="card-body">
        @if (emailData is not null)
        {
            <EmailForm EmailData="emailData" OnSubmit="HandleSubmit" />
        }
    </div>
</div>

@code {
    [Parameter]
    public int ContactId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }

    private EmailData? emailData;
    private UserInfo? userInfo;
    private ContactDTO? contact;


    protected override async Task OnInitializedAsync()
    {
        // get the category or get all categorys contacts
        // get userId
        // set emailData to have category contacts emails
        try
        {
            userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);

            contact = await ContactService.GetContactByIdAsync(ContactId, userInfo!.UserId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
        if (contact is null)
        {
            Nav.NavigateTo("contacts");
        }
        else
        {
            string emails = contact.Email!;
            string recipients = string.Join("; ", emails);

            emailData = new EmailData()
                {
                    Recipients = recipients,
                    Subject = $"Message for {contact.FullName}"
                };
        }

    }

    private async Task HandleSubmit()
    {
        // send email
        // redirect to contacts index
        try
        {
            await ContactService.EmailContactAsync(ContactId, emailData!, userInfo!.UserId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
        Nav.NavigateTo("contacts");
    }
}
